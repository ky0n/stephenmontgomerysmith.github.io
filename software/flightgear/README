New: now there is a port of flightgear, so the easiest thing for
you to do is cd /usr/ports/games/flightgear; make install clean.
(It uses calibrate-0.0.1.tar.gz from here.)

Here is a compiled version of flightgear for you to try out.
The original sources (or links to them) are at http://www.flightgear.org

Really, it was quite a hack job to get it going on FreeBSD.  Don't blame me if 
your computer blows up as a result.

You need to have Mesa 3.0 installed, preferably with hardware acceleration
installed.  (I don't know if it works with the glide stuff - I compiled it
with the nVidia cards in mind.)

The file fgfs is the binary that runs flight gear.

The file rr is a very short script to start fgfs.  Particularly important
is to set the environment variable FG_ROOT, which I will explain in a bit.
I like to start it with two other options - one makes sure that if it
is not midnight when the simulator starts (otherwise it is very dark) - 
the other makes the window large enough to almost fill my screen.
Type "fgfs --help" or look at the documentation at http://www.flightgear.org
to find out more.

You will have to untar the file fgfs-base-0.6.1.tar.gz, which will create
a directory Flightgear full of scenery information.  Make FG_ROOT point to
this directory.

Next, you might want to set up the joysticks.  Actually, this program will run
completely off the keyboard.  It is all described in the file readme.running.

This program allows the use of two joysticks,  Joystick 0 controls the
airelons and elevator.  Joystick 1 controls the throttle and rudder.
I only use joystick 0, controling the throttle and rudder from the keyboard.

The FreeBSD joystick drivers only seem to work if the joysticks are connected
to an ISA gameport - PCI gameports will not work.  Make sure that joy0 is
in your kernel configeration, and remake the kernel if necessary.
(I guess you could also use the joy lkm, but that doesn't work for me.)

Make the joystick devices:
cd /dev
sh MAKEDEV joy
chmod a+r joy?

If a joystick is not connected, I'm hoping that the software will pick this
up, but to be sure, delete or make unreadable any device you don't have,
for example
chmod o-r /dev/joy1
That way, the keyboard will be able to control those functions for which
you don't have a working joystick.

Now untar and make the calibrate program.  Then run it.  It will make
a file $HOME/.joy0rc and/or a file $HOME/.joy1rc.  
This calibrate program was a hack by me.

Put rr and fgfs in the same place, and run rr, and you are off.

Email me if it does not work, or if you can write calibrate better.

stephen@math.missouri.edu

Note, the binary is compiled from software with lots of copyrights
and licenses:


Geographic Foundation Class (gfc) 0.8.8.1b, PLIB 1.0.12 and 
Flightgear 0.6.1 are all released under the GPL or LGPL.
In accordance with those licenses, if you email me, I'll send you
the changes to the code I made.

The Generic Polygon Clipper (gpc) 2.31, comes
with the following copyright and license terms.

===========================================================================

Project:   Generic Polygon Clipper

           A new algorithm for calculating the difference, intersection,
           exclusive-or or union of arbitrary polygon sets.

File:      gpc.c
Author:    Alan Murta (amurta@cs.man.ac.uk)
Version:   2.31
Date:      4th June 1999

Copyright: (C) 1997-1999, Advanced Interfaces Group,
           University of Manchester.

           This software is free for non-commercial use. It may be copied,
           modified, and redistributed provided that this copyright notice
           is preserved on all copies. The intellectual property rights of
           the algorithms used reside with the University of Manchester
           Advanced Interfaces Group.

           You may not use this software, in whole or in part, in support
           of any commercial product without the express consent of the
           author.

           There is no warranty or other guarantee of fitness of this
           software for any purpose. It is provided solely "as is".

===========================================================================

